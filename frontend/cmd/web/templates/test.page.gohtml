{{template "base" .}}

{{define "content" }}
<div class="container">
  <div class="row">
    <div class="col">
      <h1 class="mt-5">Test microservices</h1>
      <hr />
      <a href="javascript:void(0);" id="brokerBtn" class="btn btn-outline-secondary">
        Test Broker
      </a>
      <a href="javascript:void(0);" id="authBrokerBtn" class="btn btn-outline-secondary">
        Test Auth
      </a>
      <a href="javascript:void(0);" id="loggerBtn" class="btn btn-outline-secondary">
        Test Log
      </a>
      <a href="javascript:void(0);" id="loggerGBtn" class="btn btn-outline-secondary">
        Test gRPC Log
      </a>
      <a href="javascript:void(0);" id="mailBtn" class="btn btn-outline-secondary">
        Test Mail
      </a>


      <div id="output" class="mt-5" style="outline: 1px solid silver; padding: 2em">
        <span class="text-muted">Output shows here...</span>
      </div>
    </div>
  </div>
  <div class="row">
    <div class="col">
      <h4 class="mt-5">Sent</h4>
      <div class="mt-1" style="outline: 1px solid silver; padding: 2em">
        <pre id="payload"><span class="text-muted">Nothing sent yet...</span></pre>
      </div>
    </div>
    <div class="col">
      <h4 class="mt-5">Received</h4>
      <div class="mt-1" style="outline: 1px solid silver; padding: 2em">
        <pre id="received"><span class="text-muted">Nothing received yet...</span></pre>
      </div>
    </div>
  </div>
</div>
{{ end }}

{{define "js"}}
<script>
  let brokerBtn = document.querySelector("#brokerBtn");
  let authBrokerBtn = document.querySelector("#authBrokerBtn");
  let loggerBtn = document.querySelector("#loggerBtn");
  let loggerGBtn = document.querySelector("#loggerGBtn");
  let mailBtn = document.querySelector("#mailBtn");
  let output = document.querySelector("#output");
  let payload = document.querySelector("#payload");
  let received = document.querySelector("#received");

  mailBtn.addEventListener("click", () => {
    const payload = {
      action: "mail",
      mail: {
        from: "me@example.com",
        to: "you@there.com",
        subject: "Test email",
        message: "Hello world!",
      },
    };

    const headers = new Headers();
    headers.append("Content-Type", "application/json");

    const body = {
      method: "POST",
      body: JSON.stringify(payload),
      headers,
    };

    fetch("http:\/\/localhost:8080/handle", body)
      .then((response) => response.json())
      .then((data) => {
        payload.innerHTML = JSON.stringify(payload, undefined, 4);
        received.innerHTML = JSON.stringify(data, undefined, 4);
        if (data.error) {
          output.innerHTML += `<br><strong>Error:</strong> ${data.message}`;
        } else {
          output.innerHTML += `<br><strong>Response from Broker Service </strong>: ${data.message}</br>`;
        }
      })
      .catch((err) => {
        output.innerHTML += "<br><br>Error: " + err;
      });
  });

  loggerGBtn.addEventListener("click", () => {
    const payload = {
      action: "log",
      log: {
        name: "event",
        data: "test log gRPC data",
      },
    };

    const headers = new Headers();
    headers.append("Content-Type", "application/json");

    const body = {
      method: "POST",
      body: JSON.stringify(payload),
      headers,
    };

    fetch("http:\/\/localhost:8080/log-grpc", body)
      .then((response) => response.json())
      .then((data) => {
        payload.innerHTML = JSON.stringify(payload, undefined, 4);
        received.innerHTML = JSON.stringify(data, undefined, 4);
        if (data.error) {
          output.innerHTML += `<br><strong>Error:</strong> ${data.message}`;
        } else {
          output.innerHTML += `<br><strong>Response from Broker Service </strong>: ${data.message}</br>`;
        }
      })
      .catch((err) => {
        output.innerHTML += "<br><br>Error: " + err;
      });
  });

  loggerBtn.addEventListener("click", () => {
    const payload = {
      action: "log",
      log: {
        name: "event",
        data: "test log data",
      },
    };

    const headers = new Headers();
    headers.append("Content-Type", "application/json");

    const body = {
      method: "POST",
      body: JSON.stringify(payload),
      headers,
    };

    fetch("http:\/\/localhost:8080/handle", body)
      .then((response) => response.json())
      .then((data) => {
        payload.innerHTML = JSON.stringify(payload, undefined, 4);
        received.innerHTML = JSON.stringify(data, undefined, 4);
        if (data.error) {
          output.innerHTML += `<br><strong>Error:</strong> ${data.message}`;
        } else {
          output.innerHTML += `<br><strong>Response from Broker Service </strong>: ${data.message}</br>`;
        }
      })
      .catch((err) => {
        output.innerHTML += "<br><br>Error: " + err;
      });
  });

  brokerBtn.addEventListener("click", () => {
    const body = {
      method: "GET",
    };

    fetch("http:\/\/localhost:8080", body)
      .then((response) => response.json())
      .then((data) => {
        payload.innerHTML = "empty get response";
        received.innerHTML = JSON.stringify(data, undefined, 4);
        if (data.error) {
          console.error(data.message);
        } else {
          output.innerHTML += `<br><strong>Response from Broker Service </strong>: ${data.message}</br>`;
        }
      })
      .catch((err) => {
        output.innerHTML += "<br><br>Error: " + err;
      });
  });

  authBrokerBtn.addEventListener("click", () => {
    const payload = {
      action: "auth",
      auth: {
        email: "admin@example.com",
        password: "verysecret",
      },
    };

    const headers = new Headers();
    headers.append("Content-Type", "application/json");

    const body = {
      method: "POST",
      body: JSON.stringify(payload),
      headers,
    };

    fetch("http:\/\/localhost:8080/handle", body)
      .then((response) => response.json())
      .then((data) => {
        payload.innerHTML = JSON.stringify(payload, undefined, 4);
        received.innerHTML = JSON.stringify(data, undefined, 4);
        if (data.error) {
          output.innerHTML += `<br><strong>Error:</strong> ${data.message}`;
        } else {
          output.innerHTML += `<br><strong>Response from Broker Service </strong>: ${data.message}</br>`;
        }
      })
      .catch((err) => {
        output.innerHTML += "<br><br>Error: " + err;
      });
  });
</script>
{{ end }}